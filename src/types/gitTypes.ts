/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/{username}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user profile */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    username: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A single user object */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["User"];
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{username}/repos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user repositories */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    username: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of repositories */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Repository"][];
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        User: {
            login?: string;
            id?: number;
            node_id?: string;
            /** Format: uri */
            avatar_url?: string;
            /** Format: uri */
            url?: string;
            /** Format: uri */
            html_url?: string;
            /** Format: uri */
            followers_url?: string;
            /** Format: uri */
            following_url?: string;
            /** Format: uri */
            gists_url?: string;
            /** Format: uri */
            starred_url?: string;
            /** Format: uri */
            subscriptions_url?: string;
            /** Format: uri */
            organizations_url?: string;
            /** Format: uri */
            repos_url?: string;
            /** Format: uri */
            events_url?: string;
            /** Format: uri */
            received_events_url?: string;
            type?: string;
            user_view_type?: string;
            site_admin?: boolean;
            name?: string | null;
            company?: string | null;
            blog?: string | null;
            location?: string | null;
            email?: string | null;
            hireable?: boolean | null;
            bio?: string | null;
            twitter_username?: string | null;
            public_repos?: number;
            public_gists?: number;
            followers?: number;
            following?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        Repository: {
            name?: string;
            description?: string | null;
            stargazers_count?: number;
            /** Format: uri */
            html_url?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
export type User = paths["/users/{username}"]["get"]["responses"]["200"]["content"]["application/json"];
export type Repositories = paths["/users/{username}/repos"]["get"]["responses"]["200"]["content"]["application/json"];
